@model Library.Models.BookPublisherViewModel

@{
    ViewData["Title"] = "User Index";
}

@if (TempData["ConcurrencyError"] != null)
{
    <div class="modal fade show" style="display: block;" tabindex="-1" role="dialog" aria-labelledby="errorModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="errorModalLabel">Uwaga</h5>
                </div>
                <div class="modal-body">
                    <p>@TempData["ConcurrencyError"]</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" onclick="closeModal()">Close</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        function closeModal() {
            window.location.href = window.location.href;
        }
    </script>
}

<h1>Books</h1>

<form asp-controller="Books" asp-action="Index" method="get" class="row g-2 align-items-center">
    <div class="col-md-2">
        <label for="bookPublisher" class="form-label visually-hidden">Publisher</label>
        <select id="bookPublisher" asp-for="BookPublisher" asp-items="Model.Publishers" class="form-select">
            <option value="">All</option>
        </select>
    </div>
    <div class="col-md-8">
        <label for="searchString" class="form-label visually-hidden">Title</label>
        <input type="text" id="searchString" name="SearchString" class="form-control" placeholder="Enter book title" />
    </div>
    <div class="col-auto">
        <button type="submit" class="btn btn-primary">Filter</button>
    </div>
</form>


<table class="table">
    <thead>
    <tr>
        <th>@Html.DisplayNameFor(model => model.Books![0].author)</th>
        <th>@Html.DisplayNameFor(model => model.Books![0].title)</th>
        <th>@Html.DisplayNameFor(model => model.Books![0].publisher)</th>
        <th>@Html.DisplayNameFor(model => model.Books![0].date_of_publication)</th>
        <th>@Html.DisplayNameFor(model => model.Books![0].price)</th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Books!)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.author)</td>
            <td>@Html.DisplayFor(modelItem => item.title)</td>
            <td>@Html.DisplayFor(modelItem => item.publisher)</td>
            <td>@Html.DisplayFor(modelItem => item.date_of_publication)</td>
            <td>@Html.DisplayFor(modelItem => item.price)</td>
            <td>
                @if (Convert.ToInt32(TempData["BorrowFailed"]) != item.id && item.is_loaned)
                {
                    <button class="btn btn-secondary" disabled>Borrow</button>
                }
                else
                {
                    <form asp-action="Borrow" method="post">
                        <input type="hidden" name="id" value="@item.id"/>
                        <input type="hidden" name="ConcurrencyToken" value="@item.ConcurrencyToken"/>
                        <button type="submit" class="btn btn-primary">Borrow</button>
                    </form>
                }
            </td>
        </tr>
    }
    </tbody>
</table>